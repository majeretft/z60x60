THREE.OBJLoader=function(n){this.manager=n!==undefined?n:THREE.DefaultLoadingManager};THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(n,t,i,r){var u=this,f=new THREE.XHRLoader(u.manager);f.setCrossOrigin(this.crossOrigin);f.load(n,function(n){t(u.parse(n))},i,r)},setCrossOrigin:function(n){this.crossOrigin=n},parse:function(n){function a(n){var t=parseInt(n);return(t>=0?t-1:t+u.length/3)*3}function v(n){var t=parseInt(n);return(t>=0?t-1:t+f.length/3)*3}function y(n){var t=parseInt(n);return(t>=0?t-1:t+s.length/2)*2}function w(n,t,i){r.vertices.push(u[n],u[n+1],u[n+2],u[t],u[t+1],u[t+2],u[i],u[i+1],u[i+2])}function b(n,t,i){r.normals.push(f[n],f[n+1],f[n+2],f[t],f[t+1],f[t+2],f[i],f[i+1],f[i+2])}function k(n,t,i){r.uvs.push(s[n],s[n+1],s[t],s[t+1],s[i],s[i+1])}function p(n,t,i,r,u,f,e,o,s,h,c,l){var g=a(n),p=a(t),nt=a(i),d;r===undefined?w(g,p,nt):(d=a(r),w(g,p,d),w(p,nt,d));u!==undefined&&(g=y(u),p=y(f),nt=y(e),r===undefined?k(g,p,nt):(d=y(o),k(g,p,d),k(p,nt,d)));s!==undefined&&(g=v(s),p=v(h),nt=v(c),r===undefined?b(g,p,nt):(d=v(l),b(g,p,d),b(p,nt,d)))}var e,c,r,o,i,t,d,h,tt,l,g;console.time("OBJLoader");c=[];/^o /gm.test(n)===!1&&(r={vertices:[],normals:[],uvs:[]},o={name:""},e={name:"",geometry:r,material:o},c.push(e));var u=[],f=[],s=[],nt=n.split("\n");for(h=0;h<nt.length;h++)if(i=nt[h],i=i.trim(),i.length===0||i.charAt(0)==="#")continue;else(t=/v( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)/.exec(i))!==null?u.push(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3])):(t=/vn( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)/.exec(i))!==null?f.push(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3])):(t=/vt( +[\d|\.|\+|\-|e|E]+)( +[\d|\.|\+|\-|e|E]+)/.exec(i))!==null?s.push(parseFloat(t[1]),parseFloat(t[2])):(t=/f( +-?\d+)( +-?\d+)( +-?\d+)( +-?\d+)?/.exec(i))!==null?p(t[1],t[2],t[3],t[4]):(t=/f( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+))?/.exec(i))!==null?p(t[2],t[5],t[8],t[11],t[3],t[6],t[9],t[12]):(t=/f( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))( +(-?\d+)\/(-?\d+)\/(-?\d+))?/.exec(i))!==null?p(t[2],t[6],t[10],t[14],t[3],t[7],t[11],t[15],t[4],t[8],t[12],t[16]):(t=/f( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))( +(-?\d+)\/\/(-?\d+))?/.exec(i))!==null?p(t[2],t[5],t[8],t[11],undefined,undefined,undefined,undefined,t[3],t[6],t[9],t[12]):/^o /.test(i)?(r={vertices:[],normals:[],uvs:[]},o={name:""},e={name:i.substring(2).trim(),geometry:r,material:o},c.push(e)):/^g /.test(i)||(/^usemtl /.test(i)?o.name=i.substring(7).trim():/^mtllib /.test(i)||/^s /.test(i));for(d=new THREE.Object3D,h=0,tt=c.length;h<tt;h++)e=c[h],r=e.geometry,l=new THREE.BufferGeometry,l.addAttribute("position",new THREE.BufferAttribute(new Float32Array(r.vertices),3)),r.normals.length>0&&l.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(r.normals),3)),r.uvs.length>0&&l.addAttribute("uv",new THREE.BufferAttribute(new Float32Array(r.uvs),2)),o=new THREE.MeshLambertMaterial,o.name=e.material.name,g=new THREE.Mesh(l,o),g.name=e.name,d.add(g);return console.timeEnd("OBJLoader"),d}};